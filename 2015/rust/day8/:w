fn main() -> anyhow::Result<()> {
    let input = include_str!("input2.txt")
        .lines()
        .map(|l| parser(l))
        .collect::<Result<Vec<bool>, _>>()?;
    
    dbg!(input);

    Ok(())
}

fn parser(s: &str) -> anyhow::Result<bool> {
    peg::parser! {
    grammar parser() for str {
        pub(crate) rule line() -> bool
            = letter() { true }

        rule letter() -> bool
            = ['a'..='z'] letter() {true}



        }
    }
    Ok(parser::line(s)?)
}
